{"version":3,"sources":["webpack:///./src/components/IndexCard/IndexCard.js","webpack:///./src/components/Grid/GridItem.js","webpack:///./src/components/Grid/Grid.js","webpack:///./src/components/CollectionPage/CollectionPage.js","webpack:///./src/pages/collections.js","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["IndexCard","_ref","index","react_default","a","createElement","className","beautify","GridItem","children","Grid","items","sort","Math","random","map","_ref2","node","Grid_GridItem","gatsby_image_default","fluid","childImageSharp","CollectionPage","data","_841880414","_useState","useState","page","setPage","getPage","PAGES","length","Image","allThumbImages","edges","find","image","name","components_IndexCard_IndexCard","allLargeImages","DescriptionCard","longDescription","noButton","title","description","Button","type","style","fontSize","onClick","components_Grid_Grid","gridImages","Layout","SEO","components_CollectionPage_CollectionPage","$export","__webpack_require__","$find","forced","Array","P","F","callbackfn","this","arguments","undefined"],"mappings":"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","file":"component---src-pages-collections-js-23cb801ba7d8a7989990.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './IndexCard.css'\n\nfunction IndexCard({ index }) {\n\n  function beautify(index) {\n    return (index < 10) ? `0${index}` : index;\n  }\n\n  return (\n    <div className='index-card-container'>\n      <span className=\"index-card-title\">Lefron Clothier</span>\n      <span className=\"index-card-index\">{beautify(index)}</span>\n    </div>\n  )\n}\n\nIndexCard.propTypes = {\n  index: PropTypes.number\n}\n\nexport default IndexCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Grid.css'\n\nfunction GridItem({ children }) {\n  return (\n    <div className=\"grid-item\">\n      {children}\n    </div>\n  )\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default GridItem;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GridItem from './GridItem'\nimport Img from 'gatsby-image'\nimport './Grid.css'\n\nfunction shuffle(array) {\n  array.sort(() => Math.random() - 0.5)\n}\n\nfunction Grid({ items }) {\n\n  shuffle(items)\n\n  return (\n    <div className='grid-container'>\n      {\n        items.map(({ node }) =>\n          <GridItem>\n            <Img fluid={node.childImageSharp.fluid} />\n          </GridItem>\n        )\n      }\n    </div>\n  )\n}\n\nGrid.propTypes = {\n  items: PropTypes.array.isRequired\n}\n\nexport default Grid;","import React, { useState } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from '@components/Image'\nimport DescriptionCard from '@components/DescriptionCard'\nimport IndexCard from '@components/IndexCard'\nimport Button from '@components/Button'\nimport { Grid } from '@components/Grid'\nimport './CollectionPage.css'\nimport { pages as PAGES } from './collections.json'\n\n\nfunction CollectionPage() {\n  const data = useStaticQuery(graphql`\n  query {\n    gridImages: allFile(filter: { name: { regex: \"/page-1-grid-*/\" }, extension: { regex: \"/(jpeg|jpg|gif|png)/\" }, sourceInstanceName: { eq: \"images\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n    allThumbImages: allFile(filter: { name: { regex: \"/thumb/\" }, extension: { regex: \"/(jpeg|jpg|gif|png)/\" }, sourceInstanceName: { eq: \"images\"}}) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 300, maxHeight: 240) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n    allLargeImages: allFile(filter: { name: { regex: \"/large/\" }, extension: { regex: \"/(jpeg|jpg|gif|png)/\" }, sourceInstanceName: { eq: \"images\"}}) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n  }\n  `)\n\n  const [page, setPage] = useState(0)\n\n  function incrementPage() {\n    if (page < PAGES.length - 1)\n      setPage(page + 1)\n  }\n\n  function decrementPage() {\n    if (page > 0)\n      setPage(page - 1)\n  }\n\n  function getPage() {\n    return page < PAGES.length ? PAGES[page] : 'dummy'\n  }\n\n  function getThumbImage() {\n    return data.allThumbImages.edges.find((image) => {\n      return image.node.name === `page-${page + 1}-thumb`\n    }) ||\n\n      data.allThumbImages.edges.find((image) => {\n        return image.node.name === `page-1-thumb`\n      })\n  }\n\n\n  function getLargeImage() {\n    return data.allLargeImages.edges.find((image) => {\n      return image.node.name === `page-${page + 1}-large`\n    }) ||\n\n      data.allLargeImages.edges.find((image) => {\n        return image.node.name === `page-1-large`\n      })\n  }\n\n  // var prevScrollpos = window.pageYOffset;\n  // window.onscroll = function () {\n  //   var currentScrollPos = window.pageYOffset;\n  //   this.console.log(currentScrollPos);\n  //   // if (currentScrollPos > 70) {\n  //   //   document.getElementsByClassName(\"btn-container\").style.position = \"fixed\";\n  //   //   if (currentScrollPos > 70 && prevScrollpos > currentScrollPos) {\n  //   //     document.getElementsByClassName(\"btn-container\").style.top = \"0\";\n  //   //   } else {\n  //   //     document.getElementsByClassName(\"btn-container\").style.top = \"-50px\";\n  //   //   }\n  //   // } else {\n  //   //     this.document.getElementsByClassName(\"btn-container\").style.position = \"relative\";\n  //   // }\n  //   prevScrollpos = currentScrollPos;\n  // }\n\n  return (\n    <div className=\"collection-page-container\">\n      <div className=\"thumb-container\">\n        <Image fluid={getThumbImage().node.childImageSharp.fluid} />\n        <IndexCard index={page + 1} />\n      </div>\n\n      <div className=\"large\">\n        <Image fluid={getLargeImage().node.childImageSharp.fluid} />\n      </div>\n\n      <div className=\"card\">\n        <DescriptionCard\n          longDescription\n          noButton\n          title={getPage().title}\n          description={getPage().description}\n        />\n      </div>\n\n      <div className=\"btn-container\">\n        <Button type=\"secondary\" style={{ fontSize: '2em' }} onClick={decrementPage} >\n          ←\n        </Button>\n        <Button type=\"secondary\" style={{ fontSize: '2em' }} onClick={incrementPage} >\n          →\n        </Button>\n      </div>\n\n      <div className=\"image-grid\">\n        <Grid items={data.gridImages.edges} />\n      </div>\n\n    </div>\n  )\n}\n\nexport default CollectionPage","import React from \"react\"\nimport Layout from \"@components/Layout\"\nimport SEO from \"@components/SEO\"\nimport CollectionPageContainer from \"@components/CollectionPage\"\n\nfunction CollectionPage() {\n  return (\n    <Layout>\n      <SEO title=\"Collections\" />\n      <CollectionPageContainer />\n    </Layout>\n  )\n}\n\nexport default CollectionPage\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}